{
  "rules": {
    "rooms": {
      "$roomId": {
        ".read": "data.child('created').val() > (now - 86400000)",
        ".write": "true",
        ".validate": "newData.hasChildren(['host', 'created']) && newData.child('created').val() <= now",
        "host": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
        },
        "created": {
          ".validate": "newData.isNumber() && newData.val() <= now && newData.val() > (now - 300000)"
        },
        "players": {
          "$playerId": {
            ".write": "true",
            ".validate": "newData.hasChildren(['name', 'ready']) && newData.child('name').val().length <= 20",
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 20"
            },
            "ready": {
              ".validate": "newData.val() == true || newData.val() == false"
            }
          }
        },
        "gameState": {
          ".write": "true",
          ".validate": "newData.hasChildren(['timestamp']) && newData.child('timestamp').val() <= now && newData.child('timestamp').val() > (now - 5000)",
          "ball": {
            ".validate": "newData.hasChildren(['x', 'y', 'vx', 'vy']) && newData.child('x').isNumber() && newData.child('y').isNumber() && newData.child('vx').isNumber() && newData.child('vy').isNumber()"
          },
          "score": {
            ".validate": "newData.val().length == 2"
          },
          "timestamp": {
            ".validate": "newData.isNumber() && newData.val() <= now && newData.val() > (now - 5000)"
          }
        },
        "actions": {
          "$actionId": {
            ".write": "true",
            ".validate": "newData.hasChildren(['type', 'playerId', 'timestamp']) && newData.child('timestamp').val() <= now && newData.child('timestamp').val() > (now - 5000) && newData.child('playerId').val().length <= 50",
            "type": {
              ".validate": "newData.isString() && (newData.val() == 'paddle' || newData.val() == 'disconnect')"
            },
            "playerId": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
            },
            "timestamp": {
              ".validate": "newData.isNumber() && newData.val() <= now && newData.val() > (now - 5000)"
            },
            "data": {
              ".validate": "newData.exists()"
            }
          }
        },
        ".indexOn": ["created"]
      }
    },
    "rate_limit": {
      "rooms": {
        "$userId": {
          ".write": "true",
          ".validate": "newData.isNumber() && newData.val() <= now",
          ".read": "true"
        }
      },
      "actions": {
        "$userId": {
          ".write": "true",
          ".validate": "newData.isNumber() && newData.val() <= now",
          ".read": "true"
        }
      }
    }
  }
}